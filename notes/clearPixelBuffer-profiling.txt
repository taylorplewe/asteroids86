------
REGULAR INSTRUCTION LOOP
------
	rdtsc
	mov r8d, edx
	shl r8, 32
	or r8, rax
	mov ecx, (SCREEN_WIDTH*SCREEN_HEIGHT)/2
	lea rdi, [pixels]
	mov rax, 0
	_loop:
		mov qword ptr [rdi], rax
		add rdi, 8
		loop _loop

	rdtsc
	shl rdx, 32
	or rdx, rax
	sub rdx, r8
	brk
	; read RDX
5CBF07
329712
5C527D
21EB80
5CFA8A
5D68F8
5C7346
5CD693
386415
605755
4A4244
5C597E
21ECA0
5D65CA
21BFF0
5C52D5
21C914
21B8F8
22B284
22A070
22C114
5D0E9B

Average (sum/22):
4335EE = 4,404,718 clock cycles


------
SIMD INSTRUCTION LOOP
------
	rdtsc
	mov r8d, edx
	shl r8, 32
	or r8, rax
	mov ecx, (SCREEN_WIDTH*SCREEN_HEIGHT*4)/32
	lea rdi, [pixels]
	vmovdqu ymm0, ymmword ptr [zero64]
	_loop:
		vmovdqu ymmword ptr [rdi], ymm0
		add rdi, 32
		loop _loop

	rdtsc
	shl rdx, 32
	or rdx, rax
	sub rdx, r8
	brk
	; read RDX
1B82D6
19EDF1
1624B4
0E1838
1CA4CA
0F5864
125B68
0FE84D
1991F2
100AF8
0FFA14
10D9E5
0FFD20
0FAB60
1B27C9
0FD041
1A2370
11F73F
0D26DC
183885
194928
0D5520

Average (sum/22):
13DE32 = 1,302,066 clock cycles


------
FINDINGS
------

  4,404,718
- 1,302,066
-----------
  3,102,652 clock cycles saved using SIMD instructions to clear the pixel buffer